---
// src/components/AuthForm.astro

// Prop para saber qué formulario mostrar por defecto (obtenido de la URL)
interface Props {
    initialMode: 'login' | 'register';
}

const { initialMode } = Astro.props;
---

<section class="py-16 bg-gray-50 flex items-center justify-center min-h-screen-minus-header">
    <div class="w-full max-w-lg bg-white rounded-2xl shadow-xl p-8">
        
        <h1 class="text-3xl font-extrabold text-gray-900 mb-2">Autenticación</h1>
        <p class="text-gray-600 mb-6">Accede a tu cuenta o crea una nueva</p>

        <div class="flex p-1 bg-gray-100 rounded-xl mb-8 font-medium">
            <button 
                data-mode="login" 
                class="flex-1 py-3 px-4 rounded-xl transition-colors duration-200"
                aria-label="Iniciar Sesión"
            >
                Iniciar Sesión
            </button>
            <button 
                data-mode="register" 
                class="flex-1 py-3 px-4 rounded-xl transition-colors duration-200"
                aria-label="Registrarse"
            >
                Registrarse
            </button>
        </div>

        <form id="auth-form" method="POST" action="#" class="space-y-6">
            
            <div id="name-field" class="space-y-1">
                <label for="name" class="block text-sm font-bold text-gray-700">Nombre Completo</label>
                <input 
                    type="text" 
                    id="name" 
                    name="name" 
                    placeholder="Tu nombre" 
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-600"
                >
            </div>

            <div class="space-y-1">
                <label for="email" class="block text-sm font-bold text-gray-700">Correo Electrónico</label>
                <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    placeholder="tu@email.com" 
                    required 
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-600"
                >
            </div>

            <div class="space-y-1">
                <label for="password" class="block text-sm font-bold text-gray-700">Contraseña</label>
                <input 
                    type="password" 
                    id="password" 
                    name="password" 
                    placeholder="••••••••" 
                    required 
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-600"
                >
            </div>

            <div id="confirm-password-field" class="space-y-1">
                <label for="confirm-password" class="block text-sm font-bold text-gray-700">Confirmar Contraseña</label>
                <input 
                    type="password" 
                    id="confirm-password" 
                    name="confirm-password" 
                    placeholder="••••••••" 
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-600"
                >
            </div>

            <div>
                <button id="submit-button" type="submit" class="btn-primary w-full py-3 rounded-xl font-bold text-white text-lg shadow-lg">
                    {initialMode === 'login' ? 'Iniciar Sesión' : 'Crear Cuenta'}
                </button>
            </div>
        </form>
    </div>
</section>

<script define:vars={{ initialMode }}>
    // @ts-nocheck
    
    const nameField = document.getElementById('name-field');
    const confirmPasswordField = document.getElementById('confirm-password-field');
    const submitButton = document.getElementById('submit-button');
    const tabs = document.querySelectorAll('.flex-1');
    
    let currentMode = initialMode || 'login';

    // Función para actualizar la UI según el modo
    function updateUI(mode) {
        currentMode = mode;
        
        // 1. Alternar estilos de las pestañas
        tabs.forEach(tab => {
            if (tab.dataset.mode === mode) {
                tab.classList.add('bg-white', 'shadow-md', 'text-gray-900');
                tab.classList.remove('text-gray-600');
            } else {
                tab.classList.remove('bg-white', 'shadow-md', 'text-gray-900');
                tab.classList.add('text-gray-600');
            }
        });

        // 2. Alternar campos de formulario (Name and Confirm Password)
        if (mode === 'register') {
            nameField.style.display = 'block';
            confirmPasswordField.style.display = 'block';
            submitButton.textContent = 'Crear Cuenta';
            // Asegúrate de que los campos requeridos estén en Register
            document.getElementById('name').required = true;
            document.getElementById('confirm-password').required = true;

        } else { // mode === 'login'
            nameField.style.display = 'none';
            confirmPasswordField.style.display = 'none';
            submitButton.textContent = 'Iniciar Sesión';
            // Asegúrate de que los campos NO estén requeridos en Login
            document.getElementById('name').required = false;
            document.getElementById('confirm-password').required = false;
        }

        // 3. Actualizar la URL sin recargar para reflejar el estado
        const url = new URL(window.location);
        url.searchParams.set('mode', mode);
        window.history.pushState({}, '', url);
    }
    
    // Inicializar la UI al cargar la página
    updateUI(currentMode);

    // Añadir listeners a las pestañas
    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            updateUI(tab.dataset.mode);
        });
    });
</script>